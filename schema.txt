CREATE TABLE public.billoflabour (
  bol_id serial NOT NULL,
  product_id integer NULL,
  job_id integer NULL,
  time_required numeric(5,2) NULL,
  CONSTRAINT billoflabour_pkey PRIMARY KEY (bol_id),
  CONSTRAINT billoflabour_job_id_fkey FOREIGN KEY (job_id) REFERENCES public.jobs(job_id),
  CONSTRAINT billoflabour_product_id_fkey FOREIGN KEY (product_id) REFERENCES public.products(product_id)
);

CREATE TABLE public.billofmaterials (
  bom_id serial NOT NULL,
  product_id integer NULL,
  component_id integer NULL,
  quantity_required integer NULL,
  CONSTRAINT billofmaterials_pkey PRIMARY KEY (bom_id),
  CONSTRAINT billofmaterials_component_id_fkey FOREIGN KEY (component_id) REFERENCES public.components(component_id),
  CONSTRAINT billofmaterials_product_id_fkey FOREIGN KEY (product_id) REFERENCES public.products(product_id)
);

CREATE TABLE public.component_categories (
  cat_id serial NOT NULL,
  categoryname text NOT NULL,
  CONSTRAINT category_pkey PRIMARY KEY (cat_id),
  CONSTRAINT category_categoryname_key UNIQUE (categoryname)
);

CREATE TABLE public.components (
  component_id serial NOT NULL,
  internal_code text NULL,
  description text NULL,
  unit_id integer NULL,
  category_id integer NULL,
  image_url text NULL,
  CONSTRAINT components_pkey PRIMARY KEY (component_id),
  CONSTRAINT components_internal_code_key UNIQUE (internal_code),
  CONSTRAINT components_category_id_fkey FOREIGN KEY (category_id) REFERENCES public.component_categories(cat_id),
  CONSTRAINT components_unit_id_fkey FOREIGN KEY (unit_id) REFERENCES public.unitsofmeasure(unit_id)
);

CREATE TABLE public.customers (
  id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  name text NULL,
  contact text NULL,
  email text NULL,
  telephone text NULL,
  CONSTRAINT Customers_pkey PRIMARY KEY (id),
  CONSTRAINT customers_email_key UNIQUE (email),
  CONSTRAINT customers_telephone_key UNIQUE (telephone)
);

CREATE TABLE public.inventory (
  inventory_id serial NOT NULL,
  component_id integer NULL,
  quantity_on_hand integer NULL,
  location text NULL,
  reorder_level integer NULL,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT inventory_pkey PRIMARY KEY (inventory_id),
  CONSTRAINT inventory_component_id_fkey FOREIGN KEY (component_id) REFERENCES public.components(component_id)
);

CREATE TABLE public.inventory_transactions (
  transaction_id serial NOT NULL,
  component_id integer NULL,
  quantity integer NULL,
  transaction_type_id integer NULL,
  transaction_date timestamp without time zone NULL DEFAULT CURRENT_TIMESTAMP,
  order_id integer NULL,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT inventory_transactions_pkey PRIMARY KEY (transaction_id),
  CONSTRAINT inventory_transactions_component_id_fkey FOREIGN KEY (component_id) REFERENCES public.components(component_id),
  CONSTRAINT inventory_transactions_order_id_fkey FOREIGN KEY (order_id) REFERENCES public.orders(order_id),
  CONSTRAINT fk_transaction_type FOREIGN KEY (transaction_type_id) REFERENCES public.transaction_types(transaction_type_id) ON UPDATE CASCADE ON DELETE RESTRICT
);

CREATE TABLE public.job_categories (
  category_id serial NOT NULL,
  name text NOT NULL,
  CONSTRAINT job_categories_pkey PRIMARY KEY (category_id),
  CONSTRAINT job_categories_name_key UNIQUE (name)
);

CREATE TABLE public.jobs (
  job_id serial NOT NULL,
  name text NOT NULL,
  description text NULL,
  cost_per_unit_time numeric(10,2) NULL,
  category_id integer NULL,
  CONSTRAINT jobs_pkey PRIMARY KEY (job_id),
  CONSTRAINT fk_category FOREIGN KEY (category_id) REFERENCES public.job_categories(category_id)
);

CREATE TABLE public.order_attachments (
  id serial NOT NULL,
  order_id integer NULL,
  file_url text NOT NULL,
  file_name text NOT NULL,
  uploaded_at timestamp without time zone NULL DEFAULT now(),
  CONSTRAINT order_attachments_pkey PRIMARY KEY (id),
  CONSTRAINT order_attachments_order_id_fkey FOREIGN KEY (order_id) REFERENCES public.orders(order_id) ON DELETE CASCADE
);

CREATE TABLE public.order_details (
  order_detail_id serial NOT NULL,
  order_id integer NULL,
  product_id integer NULL,
  quantity integer NULL,
  unit_price numeric NULL,
  CONSTRAINT order_details_pkey PRIMARY KEY (order_detail_id),
  CONSTRAINT order_details_order_id_fkey FOREIGN KEY (order_id) REFERENCES public.orders(order_id),
  CONSTRAINT order_details_product_id_fkey FOREIGN KEY (product_id) REFERENCES public.products(product_id)
);

CREATE TABLE public.order_statuses (
  status_id serial NOT NULL,
  status_name character varying(50) NOT NULL,
  CONSTRAINT order_statuses_pkey PRIMARY KEY (status_id),
  CONSTRAINT order_statuses_status_name_key UNIQUE (status_name)
);

CREATE TABLE public.orders (
  order_id serial NOT NULL,
  customer_id integer NULL,
  order_date timestamp without time zone NULL DEFAULT CURRENT_TIMESTAMP,
  total_amount numeric NULL,
  status_id integer NULL,
  order_number text NULL,
  created_at timestamp without time zone NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp without time zone NULL DEFAULT CURRENT_TIMESTAMP,
  delivery_date date NULL,
  CONSTRAINT orders_pkey PRIMARY KEY (order_id),
  CONSTRAINT orders_customer_id_fkey FOREIGN KEY (customer_id) REFERENCES public.customers(id),
  CONSTRAINT orders_status_id_fkey FOREIGN KEY (status_id) REFERENCES public.order_statuses(status_id)
);

CREATE TABLE public.product_categories (
  product_cat_id serial NOT NULL,
  categoryname text NOT NULL,
  CONSTRAINT product_categories_pkey PRIMARY KEY (product_cat_id),
  CONSTRAINT product_categories_categoryname_key UNIQUE (categoryname)
);

CREATE TABLE public.product_category_assignments (
  product_id integer NOT NULL,
  product_cat_id integer NOT NULL,
  CONSTRAINT product_category_assignments_pkey PRIMARY KEY (product_id, product_cat_id),
  CONSTRAINT product_category_assignments_product_cat_id_fkey FOREIGN KEY (product_cat_id) REFERENCES public.product_categories(product_cat_id) ON DELETE CASCADE,
  CONSTRAINT product_category_assignments_product_id_fkey FOREIGN KEY (product_id) REFERENCES public.products(product_id) ON DELETE CASCADE
);

CREATE TABLE public.products (
  product_id serial NOT NULL,
  internal_code text NOT NULL,
  name text NOT NULL,
  description text NULL,
  CONSTRAINT products_pkey PRIMARY KEY (product_id),
  CONSTRAINT products_internal_code_key UNIQUE (internal_code)
);

CREATE TABLE public.profiles (
  id uuid NOT NULL,
  username text NULL,
  avatar_url text NULL,
  created_at timestamp with time zone NULL DEFAULT now(),
  updated_at timestamp with time zone NULL DEFAULT now(),
  CONSTRAINT profiles_pkey PRIMARY KEY (id),
  CONSTRAINT profiles_id_fkey FOREIGN KEY (id) REFERENCES auth.users(id) ON DELETE CASCADE
);

CREATE TABLE public.supplier_emails (
  email_id serial NOT NULL,
  supplier_id integer NULL,
  email character varying(255) NULL,
  is_primary boolean NULL DEFAULT false,
  CONSTRAINT supplier_emails_pkey PRIMARY KEY (email_id),
  CONSTRAINT supplier_emails_supplier_id_fkey FOREIGN KEY (supplier_id) REFERENCES public.suppliers(supplier_id)
);

CREATE TABLE public.supplier_order_receipts (
  receipt_id bigint GENERATED ALWAYS AS IDENTITY NOT NULL,
  order_id integer NOT NULL,
  transaction_id integer NOT NULL,
  quantity_received integer NOT NULL,
  receipt_date timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT supplier_order_receipts_pkey PRIMARY KEY (receipt_id),
  CONSTRAINT fk_inventory_transaction FOREIGN KEY (transaction_id) REFERENCES public.inventory_transactions(transaction_id) ON UPDATE CASCADE ON DELETE RESTRICT,
  CONSTRAINT fk_supplier_order FOREIGN KEY (order_id) REFERENCES public.supplier_orders(order_id) ON UPDATE CASCADE ON DELETE RESTRICT
);

CREATE TABLE public.supplier_order_statuses (
  status_id serial NOT NULL,
  status_name character varying(50) NOT NULL,
  CONSTRAINT supplier_order_statuses_pkey PRIMARY KEY (status_id),
  CONSTRAINT supplier_order_statuses_status_name_key UNIQUE (status_name)
);

CREATE TABLE public.supplier_orders (
  order_id bigint primary key generated always as identity,
  supplier_component_id integer NULL,
  order_quantity integer NULL,
  order_date timestamp with time zone NULL DEFAULT CURRENT_TIMESTAMP,
  status_id integer NULL,
  total_received integer NULL DEFAULT 0,
  supplier_id integer REFERENCES public.suppliers(supplier_id),
  CONSTRAINT supplier_orders_pkey PRIMARY KEY (order_id),
  CONSTRAINT supplier_orders_status_id_fkey FOREIGN KEY (status_id) REFERENCES public.supplier_order_statuses(status_id),
  CONSTRAINT supplier_orders_supplier_component_id_fkey FOREIGN KEY (supplier_component_id) REFERENCES public.suppliercomponents(supplier_component_id)
);

CREATE TABLE public.supplier_pricelists (
  pricelist_id serial NOT NULL,
  supplier_id integer NOT NULL,
  file_name text NOT NULL,
  display_name text NOT NULL,
  file_url text NOT NULL,
  file_type text NOT NULL,
  uploaded_at timestamp with time zone NULL DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT supplier_pricelists_pkey PRIMARY KEY (pricelist_id),
  CONSTRAINT supplier_pricelists_supplier_id_fkey FOREIGN KEY (supplier_id) REFERENCES public.suppliers(supplier_id) ON DELETE CASCADE
);

CREATE TABLE public.suppliercomponents (
  supplier_component_id serial NOT NULL,
  component_id integer NULL,
  supplier_id integer NULL,
  supplier_code text NOT NULL,
  price numeric(10,2) NULL,
  lead_time integer NULL,
  min_order_quantity integer NULL,
  description text NULL,
  CONSTRAINT suppliercomponents_pkey PRIMARY KEY (supplier_component_id),
  CONSTRAINT suppliercomponents_component_id_supplier_id_key UNIQUE (component_id, supplier_id),
  CONSTRAINT suppliercomponents_component_id_fkey FOREIGN KEY (component_id) REFERENCES public.components(component_id),
  CONSTRAINT suppliercomponents_supplier_id_fkey FOREIGN KEY (supplier_id) REFERENCES public.suppliers(supplier_id)
);

CREATE TABLE public.suppliers (
  supplier_id serial NOT NULL,
  name text NOT NULL,
  contact_info text NULL,
  CONSTRAINT suppliers_pkey PRIMARY KEY (supplier_id)
);

CREATE TABLE public.transaction_types (
  transaction_type_id bigint primary key generated always as identity,
  type_name character varying(20) NOT NULL UNIQUE
);

CREATE TABLE public.purchase_orders (
  purchase_order_id bigint primary key generated always as identity,
  q_number TEXT,
  order_date TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
  status_id INTEGER,
  notes TEXT,
  created_by UUID REFERENCES auth.users(id),
  approved_by UUID REFERENCES auth.users(id),
  created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
  approved_at TIMESTAMP WITH TIME ZONE,
  supplier_id integer REFERENCES public.suppliers(supplier_id),
  CONSTRAINT purchase_orders_q_number_key UNIQUE (q_number),
  CONSTRAINT purchase_orders_status_id_fkey FOREIGN KEY (status_id) 
      REFERENCES public.supplier_order_statuses(status_id)
);

CREATE TABLE public.unitsofmeasure (
  unit_id serial NOT NULL,
  unit_code text NOT NULL,
  unit_name text NOT NULL,
  CONSTRAINT unitsofmeasure_pkey PRIMARY KEY (unit_id),
  CONSTRAINT unitsofmeasure_unit_code_key UNIQUE (unit_code)
);